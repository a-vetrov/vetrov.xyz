{"version":3,"sources":["App/bg.svg","Button/Button.js","ButtonList/ButtonList.js","LetterPlate/LetterPlate.js","Word/Word.js","LetterSound.js","App/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Button","react_default","a","createElement","className","onClick","this","props","disabled","label","Component","ButtonList","_this","items","split","map","letter","index","src_Button_Button","handleClick","key","LetterPlate","Word","sound","ref","React","createRef","stopCurrentSound","stop","componentWillUnmount","onImageLoad","$img","$","current","undefined","css","w","naturalWidth","h","naturalHeight","width","height","dh","dw","status","Howl","src","wordSound","onend","handler","autoplay","onAnimationEnd","handleAnimationFinish","pictureUrl","alt","word","onLoad","LetterSound","sound1","sound2","sound1Loaded","sound2Loaded","soundsReady","handlerSound1Loaded","play","handlerSound2Loaded","handleSound1FinishedPlaying","onload","letterSound","PureComponent","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","$initXML","loadInitXML","get","xml","setState","configLoaded","fail","console","log","$item","$letterNode","find","$items","length","randRange","attr","state","previousWord","letterAppeared","uid","getUID","r1","r2","Math","round","random","handleLetterFinishedPlaying","handlePreviousAnimationFinish","letterPlateItem","src_LetterPlate_LetterPlate","letterSoundItem","src_LetterSound","wordStatus","wordItem","src_Word_Word","prevWordItem","bg","src_ButtonList_ButtonList","ReactDOM","render","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.bac0e268.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.2da05700.svg\";","import React, { Component } from 'react';\r\nimport './Button.css';\r\n\r\nclass Button extends Component {\r\n    render() {\r\n        return (\r\n            <button className=\"Button\" onClick={this.props.onClick} disabled={this.props.disabled}>{this.props.label}</button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Button;","import React, { Component } from 'react';\r\nimport Button from '../Button/Button' ;\r\nimport './ButtonList.css'\r\n\r\nclass ButtonList extends Component {\r\n\r\n    render() {\r\n        const alphabet = \"АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ\".split(\"\") ;\r\n\r\n        const items = alphabet.map((letter, index) =>\r\n            <Button label={letter} onClick={() => this.props.handleClick(letter)} key={\"button\"+index} disabled={this.props.disabled}/>\r\n        ) ;\r\n\r\n        return (\r\n            <div className=\"ButtonList\">\r\n                    {items}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ButtonList;","import React, { Component } from 'react';\r\nimport './LetterPlate.css'\r\n\r\nclass LetterPlate extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"LetterPlate\">\r\n                <div className=\"LetterPlate-letter\">{this.props.letter}</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default LetterPlate;\r\n","import React, { Component } from 'react';\r\nimport './Word.css';\r\nimport {Howl} from 'howler';\r\nimport $ from 'jquery';\r\n\r\nclass Word extends Component {\r\n\r\n    sound = null ;\r\n\r\n    ref = React.createRef();\r\n\r\n    render() {\r\n\r\n        this.stopCurrentSound() ;\r\n\r\n        if (this.props.status === \"appear\") {\r\n            this.sound = new Howl({\r\n                src: [this.props.wordSound],\r\n                onend: this.props.handler,\r\n                autoplay: true\r\n            });\r\n        }\r\n\r\n        return (\r\n            <div className={\"word word_\" + this.props.status} onAnimationEnd={this.props.handleAnimationFinish} >\r\n                <img className=\"word-image\" src={this.props.pictureUrl} alt={this.props.word} ref={this.ref} onLoad={this.onImageLoad}/>\r\n                <p className=\"word-caption\">{this.props.word}</p>\r\n\r\n            </div>\r\n        );\r\n    } ;\r\n\r\n    stopCurrentSound = () => {\r\n        if (this.sound)\r\n            this.sound.stop() ;\r\n    } ;\r\n\r\n    componentWillUnmount = () => {\r\n        this.stopCurrentSound() ;\r\n    } ;\r\n\r\n    onImageLoad = () => {\r\n        let $img = $(this.ref.current) ;\r\n        // Check for IE\r\n        if ($img.css('object-fit') === undefined) {\r\n            const w = $img[0].naturalWidth ;\r\n            const h = $img[0].naturalHeight ;\r\n            const maxWidth = 280 ;\r\n            const maxHeight = 370 ;\r\n\r\n            if (w/h >= maxWidth/maxHeight) {\r\n                $img.width(maxWidth) ;\r\n                $img.height(h*maxWidth/w) ;\r\n                let dh = maxHeight - $img.height() ;\r\n                $img.css(\"margin\",(10+dh/2)+\"px 0 \"+(dh/2)+\"px 0\") ;\r\n            } else  {\r\n                $img.height(maxHeight) ;\r\n                $img.width(w*maxHeight/h) ;\r\n                let dw = maxWidth - $img.width() ;\r\n                $img.css(\"margin\",\"0 \" + (dw/2)+\"px 0 \" +(10+dw/2)+\"px\") ;\r\n            }\r\n        }\r\n    } ;\r\n\r\n}\r\n\r\nexport default Word;","import { PureComponent } from 'react';\r\nimport {Howl} from 'howler';\r\n\r\nclass LetterSound extends PureComponent {\r\n\r\n    sound1 = null ;\r\n    sound2 = null ;\r\n\r\n    sound1Loaded = false;\r\n    sound2Loaded = false;\r\n\r\n    soundsReady = () => this.sound1Loaded && this.sound2Loaded ;\r\n\r\n\r\n    handlerSound1Loaded = () => {\r\n        this.sound1Loaded = true ;\r\n        if (this.soundsReady())\r\n            this.sound1.play() ;\r\n    } ;\r\n\r\n    handlerSound2Loaded = () => {\r\n        this.sound2Loaded = true ;\r\n        if (this.soundsReady())\r\n            this.sound1.play() ;\r\n    } ;\r\n\r\n    handleSound1FinishedPlaying = () => {\r\n        this.sound2.play() ;\r\n    } ;\r\n\r\n    render() {\r\n        this.stopCurrentSound() ;\r\n        if (!this.sound1) {\r\n            this.sound1 = new Howl({\r\n                src: ['mp3/words/letter.mp3'],\r\n                onload:this.handlerSound1Loaded,\r\n                onend: this.handleSound1FinishedPlaying\r\n            });\r\n        }\r\n\r\n        this.sound2Loaded = false ;\r\n        this.sound2 = new Howl({\r\n            src: [this.props.letterSound],\r\n            onload:this.handlerSound2Loaded,\r\n            onend: this.props.handler\r\n        });\r\n\r\n        return (\r\n            null\r\n        );\r\n    }\r\n\r\n    stopCurrentSound = () => {\r\n        if (this.sound1)\r\n            this.sound1.stop() ;\r\n        if (this.sound2)\r\n            this.sound2.stop() ;\r\n    } ;\r\n\r\n    componentWillUnmount = () => {\r\n       this.stopCurrentSound() ;\r\n    } ;\r\n\r\n}\r\n\r\nexport default LetterSound;\r\n","import React, { Component } from 'react';\nimport bg from './bg.svg';\nimport './App.css';\nimport ButtonList from '../ButtonList/ButtonList' ;\nimport LetterPlate from '../LetterPlate/LetterPlate' ;\nimport Word from '../Word/Word' ;\nimport $ from 'jquery' ;\nimport LetterSound from '../LetterSound'\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            letter: null,\n            configLoaded: false,\n            letterSound:null,\n            wordSound:null,\n            word:null,\n            pictureUrl:null,\n            letterAppeared:false,\n            previousWord:null,\n            uid:0\n        } ;\n        this.loadInitXML() ;\n    }\n\n    $initXML = null ;\n\n    loadInitXML = () => {\n        /*fetch(\"init.xml\").then(response => response.text()).then(xmlString => {\n            this.$initXML = $((new DOMParser()).parseFromString(xmlString, \"text/xml\")) ;\n            this.setState({configLoaded: true});\n        }) ;*/\n\n        $.get( \"init.xml\", (xml) => {\n            this.$initXML = $(xml) ;\n            this.setState({configLoaded: true});\n        }).fail(function() {\n            console.log(\"init.xml loading error\") ;\n        }) ;\n\n    } ;\n\n    handleClick = letter => {\n        let $letterNode = this.$initXML.find('letter[value=' + letter +']') ;\n        let $items = $letterNode.find(\"item\") ;\n        let $item ;\n        if ($items.length > 1) {\n            do {\n                $item = $($items[this.randRange(0,$items.length-1)]) ;\n            } while ($item.attr('word') === this.state.word)\n        } else {\n            $item = $($items[0]) ;\n        }\n        let previousWord = this.state.word ? {word:this.state.word, wordSound:this.state.wordSound,\n                                                pictureUrl:this.state.pictureUrl} : null ;\n\n        this.setState({ letter:letter,\n                        letterSound:$letterNode.attr('mp3'),\n                        word:$item.attr('word'),\n                        wordSound:$item.attr('mp3'),\n                        pictureUrl:$item.attr('img'),\n                        letterAppeared:false,\n                        previousWord:previousWord,\n                        uid:this.state.uid+1\n                        }) ;\n    } ;\n\n    getUID = () => \"uid\"+this.state.uid ;\n\n    randRange = (r1,r2) => Math.round(r1 + Math.random() * (r2 - r1)) ;\n\n\n    handleLetterFinishedPlaying = () => {\n        this.setState({letterAppeared:true}) ;\n    } ;\n\n    handlePreviousAnimationFinish = () => {\n        this.setState({previousWord:null})\n    } ;\n\n    render() {\n        const key = this.getUID() ;\n        const letterPlateItem = this.state.letter ? <LetterPlate letter={this.state.letter} key={\"plate\"+key}/> : null ;\n        const letterSoundItem = this.state.letter ? <LetterSound letterSound={this.state.letterSound}\n                                                                 handler={this.handleLetterFinishedPlaying}\n                                                                 key={\"letterSound\" +key}/> : null ;\n        const wordStatus = this.state.letterAppeared ? \"appear\" : \"invisible\" ;\n        const wordItem = this.state.wordSound ? <Word pictureUrl={this.state.pictureUrl}\n                                                      wordSound={this.state.wordSound}\n                                                      word={this.state.word} status={wordStatus}/> : null ;\n\n        const prevWordItem = this.state.previousWord ? <Word pictureUrl={this.state.previousWord.pictureUrl}\n                                                             wordSound={this.state.previousWord.wordSound}\n                                                             word={this.state.previousWord.word} status=\"disappear\"\n                                                             handleAnimationFinish={this.handlePreviousAnimationFinish}/> : null ;\n        return (\n            <div className=\"App\">\n                <img src={bg} className=\"App-bg\" alt=\"\"/>\n                <ButtonList handleClick={this.handleClick} disabled={!this.state.configLoaded}/>\n                {letterPlateItem}\n                {letterSoundItem}\n                {prevWordItem}\n                {wordItem}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}